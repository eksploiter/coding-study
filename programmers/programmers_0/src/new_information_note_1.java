//코딩테스트 준비를 통해 새롭게 알게된 점들을 기록합니다.

public class new_information_note_1 {
}

// 코딩테스트를 준비하는 과정에서 문득 헷갈리는 문제가 생겼다.

// 그것은 바로
// 어떤 문제는 일반적으로 우리가 잘 아는 main 메서드인
// public static void main(String[] args) { 로 문제풀이가 시작되는 반면
// 다른 문제는 solution 메서드인
// public String solution(..) { 로 문제풀이가 시작된다는 점이다.

// 그 이유에 대해서 알아보자.
// 이러한 이유를 알기 위해서는 우선
// 'main' 메서드와 'solution' 메서드의 차이점을 자세히 알아야한다.
// (solution 메서드의 메서드 명인 solution 은 예시이며 String 역시 예시 반환 타입이다.)

// public static void main(String[] args)

// 1. 역할:
// - Java 프로그램의 진입점(entry point) 입니다.
// - 모든 Java 애플리케이션은 하나의 'main' 메서드를 가져야 하며,
// - 이 메서드가 실행되면서 프로그램이 시작됩니다.
// 2. 특징:
// - 'public': 접근제어자 입니다. 이 메서드는 어디서든 접근할 수 있어야 하기 때문에 'public' 으로 선언됩니다.
// - 'static': 이 메서드는 인스턴스가 아닌 클래스 레벨에서 호출됩니다. 프로그램 시작 시 특정 객체가 생성되지 않더라고 호출될 수 있어야 하기 때문에 'static' 으로 선언됩니다.
// - 'void': 반환 타입 입니다. 'main' 메서드는 아무것도 반환하지 않습니다.
// - 'main': 메서드의 이름 입니다.이 이름은 반드시 'main' 이어야 합니다.
// - 'String[] args': 메서드 매개변수입니다. 프로그램이 실행될 때 전달되는 명령줄 인수(arguments) 를 배열로 받습니다.

// public String solution()
// 1. 역할:
// - 이 메서드는 특정 문제를 해결하거나 기능을 수행하기 위해 작성된 사용자 정의 메서드 입니다.
// - 이 메서드는 프로그램의 진입점이 아니며, 다른 메서드에서 호출되어 사용됩니다.
// 2. 특징:
// - 'public': 접근제어자 입니다. 이 메서드는 어디서든 접근할 수 있습니다.
// - 'static' 없음: 이 메서드는 클래스의 인스턴스(객체) 레벨에서 호출됩니다. 따라서 객체를 생성해야만 이 메서드를 호출할 수 있습니다.
//                  물론, 'static' 으로 선언할 수도 있습니다. 이 경우 클레스 레벨에서 호출할 수 있습니다.
// - 'String': 반환 타입입니다.이 메서드는 문자열을 반환합니다. 반환 타입은 'int', 'void', 'boolean' 등 다양한 타입이 될 수 있습니다.
// - 'solution': 메서드의 이름입니다. 이 이름은 임의로 지정할 수 있습니다.
// - 매개변수 없음: 이 메서드는 매개변수를 받지 않습니다. 필요에 따라 매개변수를 추가할 수 있습니다.

// 주요 차이점 요약

// 용도:
// - 'main' 메서드는 프로그램의 진입점으로, 프로그램이 시작될 때 실행됩니다.
// - 'solution' 메서드는 특정 작업이나 문제를 해결하기 위한 메서드로, 다른 메서드에서 호출됩니다.

// 정적/인스턴스:
// - 'main' 메서드는 'static' 으로 선언되어 클래스 레벨에서 호출됩니다.
// - 'solution' 메서드는 'static' 이 아니므로 객체 인스턴스를 통해 호출됩니다. ('static' 으로 선언될 수도 있습니다.)

// 반환 타입:
// - 'main' 메서드는 항상 'void' 를 반환하며, 반환값이 없습니다.
// - 'solution' 메서드는 반환타입이 다양할 수 있으며, 위 예제에서는 'String' 을 반환합니다.

// 매개변수:
// - 'main' 메서드는 항상 'String[] args' 를 매개변수로 받습니다.
// - 'solution' 메서드는 필요에 따라 다양한 매개변수를 가질 수 있으며, 위 예제에서는 매개변수가 없습니다.

// 이 차이점을 이해하면 'main' 메서드와 일반 메서드의 사용 목적과 호출 방식을 구분할 수 있습니다.